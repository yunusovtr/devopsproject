---
- name: Install Docker everywhere
  hosts: nodes:node0:bastion
  become: yes
  roles:
    - single_docker

- name: Run Rancher on node0 vm
  hosts: node0
  tags:
    - rancher
  tasks:
    - name: Run Rancher container
      docker_container:
        name: rancher
        image: rancher/rancher
        state: started
        ports:
          - "80:80"
          - "443:443"
        restart_policy: unless-stopped
        privileged: yes

- name: Set nginx back-proxy
  hosts: bastion
  tags:
    - nginx
  vars:
    nginx_dir: /srv/nginx
  tasks:
    - name: Create nginx dir
      become: yes
      file:
        dest: "{{ nginx_dir }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        state: directory

    - name: Copy all nginx files
      copy:
        src: nginx/
        dest: "{{ nginx_dir }}/"
      notify: Reload nginx conf
    
    - name: Copy and fill nginx template conf file
      template:
        src: templates/nginx.conf.j2
        dest: "{{ nginx_dir }}/nginx.conf"
      notify: Reload nginx conf
    
    - name: Install socat
      apt: name=socat state=present
    
    - name: Install script
      shell: "curl https://get.acme.sh | sh"
      register: result

    - name: View script result
      debug: var=result

#acme.sh --register-account -m yunusovtr@live.ru


    - name: Issue certificate
      shell: >
        /home/{{ ansible_user }}/.acme.sh/acme.sh --issue -d {{ hostvars['nat-instance'].ansible_host }}.sslip.io
        -w {{ nginx_dir }}/cert
      notify: Reload nginx conf
      tags:
        - cert
      #acme.sh --issue -d 51.250.95.210.sslip.io -w /srv/nginx/cert

    - name: Install cert
      shell: >
        /home/{{ ansible_user }}/.acme.sh/acme.sh --install-cert -d {{ hostvars['nat-instance'].ansible_host }}.sslip.io 
        --key-file {{ nginx_dir }}/cert/key.pem
        --fullchain-file {{ nginx_dir }}/cert/cert.pem
      notify: Reload nginx conf
      tags:
        - cert
      #acme.sh --install-cert -d 51.250.95.210.sslip.io --key-file /srv/nginx/cert/key.pem --fullchain-file /srv/nginx/cert/cert.pem
    
    - name: Run Nginx container
      docker_container:
        name: edge
        hostname: edge
        image: nginx:1.21.6
        restart_policy: unless-stopped
        mounts:
          - source: "{{ nginx_dir }}"
            target: "/etc/nginx"
            type: bind
        published_ports:
          - "80:80"
          - "443:443"

  handlers:
    - name: Reload nginx conf
      community.docker.docker_container_exec:
        container: edge
        command: nginx -s reload
